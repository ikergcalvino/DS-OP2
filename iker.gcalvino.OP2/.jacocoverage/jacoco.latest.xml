<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="JaCoCoverage analysis (powered by JaCoCo from EclEmma)"><sessioninfo id="DESKTOP-CFBGGNS-8863301d" start="1593698348984" dump="1593698349303"/><sessioninfo id="DESKTOP-CFBGGNS-f5617f96" start="1593698349534" dump="1593698349818"/><sessioninfo id="DESKTOP-CFBGGNS-c649c02d" start="1593698350050" dump="1593698350354"/><package name="iker/gcalvino/op2"><class name="iker/gcalvino/op2/SWL"><method name="&lt;init&gt;" desc="(Ljava/lang/String;CC)V" line="8"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="()Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="116"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="iker/gcalvino/op2/ROR"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="()Ljava/lang/String;" line="22"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="iker/gcalvino/op2/ROL"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="iker/gcalvino/op2/MOP"><method name="&lt;init&gt;" desc="(Ljava/lang/String;II)V" line="8"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="()Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="iker/gcalvino/op2/Scrambler"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encodePassword" desc="(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decodePassword" desc="(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="iker/gcalvino/op2/Selector"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperator" desc="(Ljava/lang/String;Ljava/lang/String;)Liker/gcalvino/op2/Operation;" line="6"><counter type="INSTRUCTION" missed="0" covered="123"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="6" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="126"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="6" covered="14"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="iker/gcalvino/op2/SWP"><method name="&lt;init&gt;" desc="(Ljava/lang/String;II)V" line="8"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="()Ljava/lang/String;" line="31"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="iker/gcalvino/op2/REP"><method name="&lt;init&gt;" desc="(Ljava/lang/String;II)V" line="8"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="()Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="152"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Selector.java"><line nr="3" mi="0" ci="3" mb="0" cb="0"/><line nr="6" mi="0" ci="53" mb="6" cb="20"/><line nr="8" mi="0" ci="13" mb="0" cb="0"/><line nr="10" mi="0" ci="11" mb="0" cb="0"/><line nr="12" mi="0" ci="9" mb="0" cb="0"/><line nr="14" mi="0" ci="9" mb="0" cb="0"/><line nr="16" mi="0" ci="13" mb="0" cb="0"/><line nr="18" mi="0" ci="13" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="126"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="6" covered="14"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Scrambler.java"><line nr="5" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="4" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="2"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="2"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="9" mb="0" cb="2"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="2"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MOP.java"><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="21" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="21" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ROL.java"><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="19" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="0"/><line nr="22" mi="0" ci="19" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="REP.java"><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="2"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="12" mb="2" cb="2"/><line nr="24" mi="0" ci="13" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="24" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="2"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="12" mb="2" cb="2"/><line nr="41" mi="0" ci="13" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="24" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="152"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ROR.java"><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="19" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="19" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SWP.java"><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="12" mb="2" cb="2"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="12" mb="2" cb="2"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SWL.java"><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="9" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="9" mb="0" cb="2"/><line nr="21" mi="0" ci="13" mb="0" cb="4"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="9" mb="0" cb="2"/><line nr="36" mi="0" ci="13" mb="0" cb="4"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="116"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="794"/><counter type="BRANCH" missed="14" covered="52"/><counter type="LINE" missed="0" covered="124"/><counter type="COMPLEXITY" missed="14" covered="47"/><counter type="METHOD" missed="0" covered="23"/><counter type="CLASS" missed="0" covered="8"/></package><counter type="INSTRUCTION" missed="0" covered="794"/><counter type="BRANCH" missed="14" covered="52"/><counter type="LINE" missed="0" covered="124"/><counter type="COMPLEXITY" missed="14" covered="47"/><counter type="METHOD" missed="0" covered="23"/><counter type="CLASS" missed="0" covered="8"/></report>